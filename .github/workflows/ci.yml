name: CI/CD Pipeline for Docker

on:
  push:
    branches:
      - main  # O cualquier otra rama que uses para producción

jobs:
  build:
    runs-on: ubuntu-latest  # Usamos Ubuntu para ejecutar el flujo de trabajo

    steps:
    # 1. Verificar el código fuente
    - name: Checkout repository
      uses: actions/checkout@v2
    
    # 2. Configurar Docker y ejecutar build
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Build Docker image
      run: |
        docker build -t my_app_image .

    # 3. Desplegar la imagen Docker directamente en EC2
    - name: Deploy to EC2
      uses: appleboy/ssh-action@v0.1.4
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        port: 22
        script: |
          # Detener y eliminar el contenedor anterior (si existe)
          docker stop my_container || true
          docker rm my_container || true
          
          # Descargar la nueva imagen construida directamente en EC2
          docker build -t my_app_image /path/to/your/code

          # Ejecutar el contenedor
          docker run -d --name my_container my_app_image
