name: CI / CD Pipeline

on:
  push:
    branches:
      - main 
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest  # Usamos Ubuntu para ejecutar el flujo de trabajo

    steps:
    # 1. Verificar el código fuente
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        ref: main  # Asegúrate de que estás en la rama correcta
    
    # 2. Desplegar la imagen Docker directamente en EC2
    - name: Deploy to EC2 via SSH
      uses: appleboy/ssh-action@v0.1.6
      with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_KEY }}
          port: 22
          script: |
            sudo su
            cd /home/ubuntu/

            if [ ! -d "backend" ]; then
              git clone https://github.com/Tesis-Grupo-1/backend.git backend
            else
              cd backend
              git reset --hard
              git pull
              cd ..
            fi

            cd backend

            # Crear entorno virtual si no existe
            if [ ! -d "venv" ]; then
              python3.12 -m venv venv
            fi

            # Activar entorno virtual y actualizar pip
            source venv/bin/activate
            pip install --upgrade pip

            # Instalar dependencias
            pip install -r requirements.txt
    
    
    - name: Build and restart Docker Compose on EC2
      uses: appleboy/ssh-action@v0.1.6
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_KEY }}
        port: 22
        script: |
          cd /home/ubuntu/backend
          containers=$(sudo docker ps -aq)
          if [ -n "$containers" ]; then
            echo "Stopping and removing existing containers..."
            sudo docker stop $containers
            sudo docker rm $containers
            sudo docker system prune -a --volumes -f
          else
            echo "No running containers found."
          fi

          sudo docker-compose -f docker-compose.yml build
          sudo docker-compose -f docker-compose.yml up -d
          sudo docker ps
